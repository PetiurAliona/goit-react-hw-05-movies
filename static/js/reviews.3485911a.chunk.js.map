{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","api","fetchMovieReviews","then","results","length","map","author","author_details","username","content","id"],"mappings":"yLA8BeA,UA1BC,WACd,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,IAAIC,kBAAkBP,GAASQ,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBL,EAAWK,QAC/D,CAACT,IAGF,mCACE,6BACGG,GAAWA,EAAQO,OAClBP,EAAQQ,KAAI,SAACC,GAAD,OACV,+BACE,0CAAaA,EAAOC,eAAeC,YACnC,4BAAIF,EAAOG,YAFJH,EAAOI,OAMlB","file":"static/js/reviews.3485911a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport api from \"../utills/apiService\"\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams()\r\n  const [reviews, setReviews] = useState([])\r\n\r\n  useEffect(() => {\r\n    api.fetchMovieReviews(movieId).then(({ results }) => setReviews(results))\r\n  }, [movieId])\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {reviews && reviews.length ? (\r\n          reviews.map((author) => (\r\n            <li key={author.id}>\r\n              <h3>Author: {author.author_details.username}</h3>\r\n              <p>{author.content}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <h2>We don`t have ane reviews for this movie.</h2>\r\n        )}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Reviews\r\n"],"sourceRoot":""}