{"version":3,"sources":["components/SearchBar/SearchBar.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SearchBar/SearchBar.js","pages/MoviesPage.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchBar","useState","searchQuery","setSearchQuery","location","useLocation","history","useHistory","onSubmit","e","preventDefault","trim","toast","error","search","type","className","styled","buttonSearch","autoComplete","autoFocus","placeholder","onChange","currentTarget","name","MoviesPage","movies","setMovies","queryUrl","URLSearchParams","get","getMovieByQuery","api","fetchMovieByQuery","then","results","catch","console","log","useEffect","MoviesList","moviesListData"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,aAAe,kC,2DCDlB,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,kDCWMQ,EAtCG,WAChB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAWC,cACXC,EAAUC,cAehB,OACE,uBAAMC,SAVa,SAACC,GAEpB,GADAA,EAAEC,iBACyB,KAAvBR,EAAYS,OACd,OAAOC,IAAMC,MAAM,yBAGrBP,EAAQjB,KAAR,OAAkBe,GAAlB,IAA4BU,OAAO,SAAD,OAAWZ,OAI7C,UACE,wBAAQa,KAAK,SAASC,UAAWC,IAAOC,aAAxC,SACE,4CAGF,uBACEH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAxBsB,SAACb,GAC3BN,EAAeM,EAAEc,cAAcjD,QAwB3BA,MAAO4B,EACPsB,KAAK,oB,QCGEC,UAjCI,WACjB,IAAMrB,EAAWC,cAEjB,EAA4BJ,mBAAS,IAArC,mBAAOyB,EAAP,KAAeC,EAAf,KAEMC,EAAW,IAAIC,gBAAgBzB,EAASU,QAAQgB,IAAI,SAEpDC,EAAkB,WAEtBC,IACGC,kBAAkBL,GAClBM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQxC,QAJSiB,IAAMC,MAAM,uBAKlCc,EAAUQ,MAEXC,OAAM,SAACvB,GAAD,OAAWwB,QAAQC,IAAIzB,OAUlC,OAPA0B,qBAAU,WACJX,GACFG,MAGD,CAACH,IAGF,qCACE,cAAC,EAAD,IACA,cAACY,EAAA,EAAD,CAAYC,eAAgBf","file":"static/js/movies-page.17c0fad2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonSearch\":\"SearchBar_buttonSearch__2AV7T\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useLocation, useHistory } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\n\r\nimport { toast } from \"react-toastify\"\r\nimport styled from \"./SearchBar.module.css\"\r\n\r\nconst SearchBar = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const onHandleInputChange = (e) => {\r\n    setSearchQuery(e.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (searchQuery.trim() === \"\") {\r\n      return toast.error(\"Please enter the date\")\r\n    }\r\n\r\n    history.push({ ...location, search: `query=${searchQuery}` })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button type=\"submit\" className={styled.buttonSearch}>\r\n        <span>Search</span>\r\n      </button>\r\n\r\n      <input\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n        autoFocus\r\n        placeholder=\"Search movies\"\r\n        onChange={onHandleInputChange}\r\n        value={searchQuery}\r\n        name=\"searchQuery\"\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import api from \"../components/utills/apiService\"\r\nimport SearchBar from \"../components/SearchBar/SearchBar\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\n\r\nimport { toast } from \"react-toastify\"\r\nimport MoviesList from \"../components/MoviesList/MoviesList\"\r\n\r\nconst MoviesPage = () => {\r\n  const location = useLocation()\r\n\r\n  const [movies, setMovies] = useState([])\r\n\r\n  const queryUrl = new URLSearchParams(location.search).get(\"query\")\r\n\r\n  const getMovieByQuery = () => {\r\n    const notifyError = () => toast.error(\"Images wasn`t found\")\r\n    api\r\n      .fetchMovieByQuery(queryUrl)\r\n      .then(({ results }) => {\r\n        if (!results.length) notifyError()\r\n        setMovies(results)\r\n      })\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (queryUrl) {\r\n      getMovieByQuery()\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [queryUrl])\r\n\r\n  return (\r\n    <>\r\n      <SearchBar />\r\n      <MoviesList moviesListData={movies} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MoviesPage\r\n"],"sourceRoot":""}